Usage
=====

This page shows a few quick, copy‑&‑paste examples to get you started.

Basic Niño Index
----------------

Load and plot the Niño 3.4 SST anomaly index directly from your NetCDF file:

.. code-block:: python

    from climalysis import nino_index

    # compute Niño 3.4 index and plot
    da = nino_index("data/sst_monthly.nc", region="3.4") \
             .load_and_process_data()
    da.plot(figsize=(10, 4), title="Niño 3.4 SST Anomaly")


Fisher Z‑Transformation
------------------------

Convert a correlation coefficient to a Fisher Z score, then get its 95% confidence interval:

.. code-block:: python

    from climalysis import fisher

    ft = fisher()
    r = 0.65
    z  = ft.r_to_Z(r)
    l, u = ft.Fishers_confidence_interval(r, n=30, confidence=95)

    print(f"r={r} → Z={z:.3f}")
    print(f"95% CI on r: ({l:.3f}, {u:.3f})")


Detrending a Time Series
------------------------

Remove a linear trend from noisy data:

.. code-block:: python

    import numpy as np
    from climalysis import remove_trend

    # synthetic data with linear drift + noise
    t = np.linspace(0, 1, 200)
    y = 2*t + np.sin(4*np.pi*t) + 0.1*np.random.randn(200)

    detrended = remove_trend(y)

    # plot before & after
    import matplotlib.pyplot as plt
    plt.plot(t, y, label="raw")
    plt.plot(t, detrended, label="detrended")
    plt.legend()
    plt.title("Detrending Example")
    plt.show()


Moving Average Filter
---------------------

Compute a centered, 7‑point moving average:

.. code-block:: python

    import numpy as np
    from climalysis import rolling_average

    data = np.random.randn(50).cumsum()
    ma_full = rolling_average(data, n=7, fill="filled", position=3)

    # plot
    import matplotlib.pyplot as plt
    plt.plot(data,   label="raw")
    plt.plot(ma_full, label="7‑point MA")
    plt.legend()
    plt.title("Moving Average")
    plt.show()


LOWESS Smoothing & Bootstrapping
--------------------------------

Fit a LOWESS curve with bootstrap uncertainty bands:

.. code-block:: python

    import numpy as np
    import matplotlib.pyplot as plt
    from climalysis import lowess

    # noisy sine wave
    x = np.linspace(0, 10, 100)
    y = np.sin(x) + 0.3*np.random.randn(100)

    lw = lowess(x, y)
    mean_curve, stderr, xgrid = lw.return_lowess_boot(K=300)

    # plot
    plt.fill_between(xgrid,
                     mean_curve - stderr,
                     mean_curve + stderr,
                     alpha=0.3,
                     label="±1 SE")
    plt.plot(xgrid, mean_curve, color="k", lw=2, label="LOWESS mean")
    plt.scatter(x, y, s=10, alpha=0.5, label="data")
    plt.legend()
    plt.title("LOWESS with Bootstrap Uncertainty")
    plt.show()


Utility: Normalize Longitudes
------------------------------

Convert any longitude array into the [–180, 180] range (or [0, 360]):

.. code-block:: python

    import numpy as np
    from climalysis import normalize_longitudes

    lons = np.array([0, 90, 180, 270, 360, 450])
    print("raw:", lons)
    print("to [–180,180]:", normalize_longitudes(lons, to="[-180,180]"))
    print("to [0,360]:  ", normalize_longitudes(lons, to="[0,360]"))

